[package]
name = "vertx"
version.workspace = true
authors.workspace = true
edition.workspace = true
homepage.workspace = true
license.workspace = true
publish = false

[lib]
crate-type = ["cdylib", "rlib"]

[features]
log = [
    "loog/log",
    "embassy-net?/log",
]
defmt = [
    "loog/defmt",
    "embassy-net?/defmt",
    "embedded-graphics/defmt",
    "postcard/use-defmt",
]

configurator = []

display-ssd1306 = ["dep:ssd1306"]

network = [
    "configurator",
    "dep:embassy-net",
]

chip-esp = [
    "defmt",
    "network",
    "dep:esp-alloc",
    "dep:esp-backtrace",
    "dep:esp-hal",
    "dep:esp-hal-embassy",
    "dep:esp-storage",
    "dep:esp-wifi",
]
chip-esp32s3 = [
    "chip-esp",
    "esp-backtrace/esp32s3",
    "esp-hal/esp32s3",
    "esp-hal-embassy/esp32s3",
    "esp-storage/esp32s3",
    "esp-wifi/esp32s3",
]

chip-rp = [
    "defmt",
    "dep:cortex-m-rt",
    "dep:embassy-rp",
    "dep:embedded-alloc",
    "dep:fixed",
    "dep:fixed-macro",
    "dep:panic-probe",
    "dep:pio",
    "embassy-executor/arch-cortex-m",
    "embassy-executor/executor-thread",
]
chip-rp2040 = [
    "chip-rp",
    "embassy-rp/rp2040",
]

# chip-stm = []
# chip-stm32f407 = [
#   "chip-stm",
#   "dep:stm32f4xx-hal",
#   "stm32f4xx-hal/stm32f407",
# ]

simulator = [
    "log",
    "configurator",
    "embassy-executor/arch-wasm",
    "embassy-executor/executor-thread",
    "embassy-time/wasm",
]

[dependencies]
bytemuck = { version = "=1.21.0", features = ["const_zeroed", "extern_crate_alloc", "min_const_generics"] }
const_format = "=0.2.34"
defmt-rtt = { workspace = true }
display-interface = "0.5.0"
embassy-executor = { workspace = true, features = ["nightly"] }
embassy-futures = "=0.1.1"
embassy-sync = { workspace = true }
embassy-time = { workspace = true, features = ["generic-queue-8"] }
embedded-graphics = "=0.8.1"
embedded-hal = "=1.0.0"
embedded-hal-async = "=1.0.0"
embedded-mogeefont = "=0.1.0"
embedded-text = "=0.7.2"
fugit = "=0.3.7"
heapless = { workspace = true, features = ["serde"] }
loog = { workspace = true }
portable-atomic = { version = "=1.11.0", features = ["critical-section"] }
postcard = { workspace = true }
qrcodegen-no-heap = "=1.8.1"
serde = { workspace = true, features = ["derive", "alloc"] }
static_cell = { workspace = true }

# displays
ssd1306 = { version = "0.9.0", features = ["async"], optional = true }

# network
atoi = { version = "=2.0.0", default-features = false }
base64 = { version = "=0.22.1", default-features = false }
edge-dhcp = "=0.5.0"
edge-ws = "=0.4.0"
embassy-net = { workspace = true, features = ["dhcpv4", "dhcpv4-hostname", "tcp", "udp"], optional = true }
embedded-io-async = { workspace = true }
httparse = { version = "=1.10.0", default-features = false }
itoa = "=1.0.14"
sha1 = { version = "=0.10.6", default-features = false }

# chip-esp
esp-alloc = { workspace = true, optional = true }
esp-backtrace = { workspace = true, features = ["defmt", "colors", "panic-handler", "exception-handler"], optional = true }
esp-hal = { workspace = true, optional = true }
esp-hal-embassy = { workspace = true, features = ["executors"], optional = true }
esp-storage = { version = "=0.5.0", features = ["low-level", "storage", "critical-section"], optional = true }
esp-wifi = { version = "=0.12.0", features = ["defmt", "wifi"], optional = true }

# chip-rp
# TODO: flip-link
cortex-m-rt = { version = "=0.7.5", optional = true }
embassy-rp = { version = "=0.3.1", features = ["defmt", "critical-section-impl", "time-driver"], optional = true }
embedded-alloc = { version = "=0.6.0", optional = true }
fixed = { version = "=1.29.0", optional = true }
fixed-macro = { version = "=1.2.0", optional = true }
panic-probe = { version = "=0.3.2", features = ["print-defmt"], optional = true }
pio = { version = "=0.2.1", optional = true }

[target.wasm32-unknown-unknown.dependencies]
base64 = "=0.22.1"
console_error_panic_hook = "0.1.7"
critical-section = { version = "=1.2.0", features = ["std"] }
talc = "=4.4.2"
wasm-bindgen = "=0.2.100"
wasm-logger = "=0.2.0"

[build-dependencies]
basic-toml = "=0.1.9"
serde = { workspace = true, features = ["derive"] }
serde_json = "=1.0.139"

[[bin]]
name = "vertx"
required-features = ["defmt"]

[lints]
workspace = true

[package.metadata.cargo-machete]
ignored = [
    "cortex-m-rt", # used by #[embassy-rp::main]
]
