version: 3

dotenv:
  - ../.env
  - .env
  - ../.env.target
  - ../.config/env

tasks:
  default:
    silent: true
    cmds:
      - task --list-all --sort none
      - echo
      - echo 'Except for tasks starting with `simulator:`, all tasks require a target. This'
      - echo 'can be set by running `task target:set` in the root of the repo.'

  cargo:
    internal: true
    requires:
      vars: [cmd, VERTX_CHIP, VERTX_RUSTC_TARGET]
    cmd: cargo {{.cmd}} -Zbuild-std=alloc,core --target {{.VERTX_RUSTC_TARGET}} -F 'chip-{{.VERTX_CHIP}}{{if .VERTX_FEATURES}} {{.VERTX_FEATURES}}{{end}}' {{.args}}

  check:
    cmds:
      - task: cargo
        vars: { cmd: clippy }

  build:
    cmds:
      - task: cargo
        vars: { cmd: build }
      - task: post-build
        vars: { profile: debug }

  build:release:
    cmds:
      - task: cargo
        vars:
          command: build
          args: --release
      - task: post-build
        vars: { profile: release }

  post-build:
    internal: true
    cmd: cp ../target/{{.VERTX_RUSTC_TARGET}}/{{.profile}}/vertx ../target/vertx
    silent: true

  flash: ../.tools/bin/probe-rs run --preverify --chip {{.VERTX_CHIP}} --idf-partition-table partitions.csv ../target/vertx

  simulator:check:
    cmds:
      - task: simulator:cargo
        vars: { command: clippy }

  simulator:build:
    cmds:
      - task: simulator:cargo
        vars: { command: build }
      - task: simulator:bindgen
        vars: { profile: debug }

  simulator:build:release:
    cmds:
      - task: simulator:cargo
        vars: { command: build --release }
      - task: simulator:bindgen
        vars: { profile: release }
      - task: simulator:optimize

  simulator:bindgen:
    internal: true
    dir: ..
    cmds:
      - .tools/bin/wasm-bindgen --out-dir target/simulator --target web target/wasm32-unknown-unknown/{{.profile}}/vertx.wasm
      - 'echo "export const memoryName: \"memory\";" >> target/simulator/vertx.d.ts'
      - echo 'export const memoryName = "memory";' >> target/simulator/vertx.js

  simulator:optimize:
    internal: true
    dir: ..
    cmd: .tools/bin/wasm-opt {{.VERTX_WASM_OPT_ARGS}} --output target/simulator/vertx_bg.wasm target/simulator/vertx_bg.wasm | bun run scripts/wasm-rename.ts target/simulator

  simulator:cargo:
    internal: true
    cmd: cargo {{.command}} -Zbuild-std=std,panic_abort --target wasm32-unknown-unknown --lib -F simulator {{.CLI_ARGS}}

  :*: cd .. && task {{index .MATCH 0}}
