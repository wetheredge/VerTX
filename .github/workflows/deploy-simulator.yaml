name: Deploy simulator

on:
  push:
    branches: [main]
    paths-ignore:
      - .github/workflows/ci.yaml
      - '**/README.md'
      - '**/Taskfile.yaml'
  pull_request:
    branches: [main]
    paths-ignore:
      - .github/workflows/ci.yaml
      - '**/README.md'
      - '**/Taskfile.yaml'

permissions:
  contents: read

env:
  CARGO_INCREMENTAL: 0
  CARGO_TERM_COLOR: always
  RUSTC_WRAPPER: sccache
  SCCACHE_GHA_ENABLED: 'true'

jobs:
  pre:
    name: Check commit exists
    runs-on: ubuntu-24.04
    outputs:
      commit: ${{ fromJSON(steps.commit.outputs.result) }}
      branch: ${{ steps.branch.outputs.branch }}
      commit-exists: ${{ steps.commit-exists.outputs.exists }}
    steps:
      - name: Shorten commit
        id: commit
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        env:
          COMMIT: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.sha || github.sha }}
        with:
          script: |
            return process.env.COMMIT.substring(0, 7);
      - name: Sanitize branch
        id: branch
        env:
          RAW: ${{ github.head_ref || github.ref_name }}
        run: |
          sanitized="$(echo "$RAW" | tr '[:upper:]' '[:lower:]' | sed -E 's/[^a-z0-9-]+/-/g; s/(^-+)|(-+$)//; s/(.{,63}).*/\1/')"
          if [ "$RAW" != "$sanitized" ]; then
            echo "Sanitized branch name from '$RAW' to '$sanitized'"
          fi
          echo "branch=$sanitized" >> "$GITHUB_OUTPUT"
      - name: Join tailnet
        uses: tailscale/github-action@84a3f23bb4d843bcf4da6cf824ec1be473daf4de # v3.2.3
        with:
          oauth-client-id: ${{ secrets.TS_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_SECRET }}
          tags: tag:ci-vertx
          use-cache: 'true'
      - name: Check if commit exists
        id: commit-exists
        run: |
          exists="$(curl --fail-with-body -X GET '${{ secrets.DEPLOY_HOST }}/commit/${{ fromJSON(steps.commit.outputs.result) }}/exists' \
            --basic -u 'simulator:${{ secrets.SIMULATOR_DEPLOY_PASSWORD }}' \
            -H 'accept: application/json')"
          echo "exists=$exists" >> "$GITHUB_OUTPUT"

  build-configurator:
    name: Build configurator
    runs-on: ubuntu-24.04
    needs: pre
    if: needs.pre.outputs.commit-exists != 'true'
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - uses: ./.github/actions/setup-bun
      - run: bun run -b astro build
        working-directory: vertx-configurator
        env:
          NODE_ENV: production
          VERTX_SIMULATOR: true
      - run: bun run scripts/csp-nonce.ts out/simulator/configurator
      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: configurator
          path: out/simulator
          compression-level: 1
          if-no-files-found: error

  build-vertx:
    name: Build VerTX
    runs-on: ubuntu-24.04
    needs: pre
    if: needs.pre.outputs.commit-exists != 'true'
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - uses: mozilla-actions/sccache-action@7d986dd989559c6ecdb630a3fd2557667be217ad # v0.0.9
      - uses: ./.github/actions/setup-rust
      - uses: ./.github/actions/setup-bun
        with:
          install: false
      - uses: ./.github/actions/cargo-install
        with:
          tool: wasm-bindgen-cli,wasm-opt
      - run: bun run scripts/build-simulator.ts --release
        env:
          VERTX_GIT_BRANCH: ${{ github.head_ref || github.ref_name }}
      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: vertx
          path: out
          compression-level: 1
          if-no-files-found: error

  build-simulator:
    name: Build simulator
    runs-on: ubuntu-24.04
    needs: [build-configurator, build-vertx]
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - uses: ./.github/actions/setup-bun
      - name: Get VerTX
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          name: vertx
          path: out
      - run: bun run vite build
        working-directory: vertx-simulator
      - run: bun run scripts/csp-nonce.ts out/simulator
      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: simulator
          path: out/simulator
          compression-level: 1
          if-no-files-found: error

  deploy:
    name: Deploy
    runs-on: ubuntu-24.04
    needs: [pre, build-configurator, build-simulator]
    if: ${{ !failure() }}
    steps:
      - name: Get simulator
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        if: needs.pre.outputs.commit-exists != 'true'
        with:
          name: simulator
          path: out
      - name: Get configurator
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        if: needs.pre.outputs.commit-exists != 'true'
        with:
          name: configurator
          path: out
      - name: Create out.tar.zstd
        if: needs.pre.outputs.commit-exists != 'true'
        run: tar --create --zstd --exclude='.[^/]*' --file=out.tar.zstd --directory=out .
      - name: Join tailnet
        uses: tailscale/github-action@84a3f23bb4d843bcf4da6cf824ec1be473daf4de # v3.2.3
        with:
          oauth-client-id: ${{ secrets.TS_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_SECRET }}
          tags: tag:ci-vertx
          use-cache: 'true'
      - name: Deploy commit
        if: needs.pre.outputs.commit-exists != 'true'
        run: |
          curl --fail-with-body -X POST '${{ secrets.DEPLOY_HOST }}/commit/${{ needs.pre.outputs.commit }}' \
            --basic -u 'simulator:${{ secrets.SIMULATOR_DEPLOY_PASSWORD }}' \
            -H 'content-type: application/zstd' \
            --data-binary @out.tar.zstd
      - name: Update branch
        run: |
          curl --fail-with-body -X POST '${{ secrets.DEPLOY_HOST }}/branch' \
            --basic -u 'simulator:${{ secrets.SIMULATOR_DEPLOY_PASSWORD }}' \
            -H 'content-type: application/json' \
            -d '{ "commit": "${{ needs.pre.outputs.commit }}", "branch": "${{ needs.pre.outputs.branch }}" }'
      - name: Summary
        run: |
          {
            echo 'Successfully deployed to:'
            echo '- <https://${{ needs.pre.outputs.commit }}.simulator.vertx.cc>'
            echo '- <https://${{ needs.pre.outputs.branch }}.simulator.vertx.cc>'
            if [ '${{ github.event.repository.default_branch }}' = '${{ needs.pre.outputs.branch }}' ]; then
              echo '- <https://simulator.vertx.cc>'
            fi
          } >> "$GITHUB_STEP_SUMMARY"
