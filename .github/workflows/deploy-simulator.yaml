name: Deploy simulator

on:
  push:
    branches: [main]
    paths-ignore:
      - .github/workflows/ci.yaml
      - '**/README.md'
      - '**/Taskfile.yaml'
  pull_request:
    branches: [main]
    paths-ignore:
      - .github/workflows/ci.yaml
      - '**/README.md'
      - '**/Taskfile.yaml'

permissions:
  contents: read

env:
  CARGO_TERM_COLOR: always
  RUSTC_WRAPPER: sccache
  SCCACHE_GHA_ENABLED: 'true'

jobs:
  pre:
    name: Check commit exists
    runs-on: ubuntu-latest
    outputs:
      commit: ${{ fromJSON(steps.commit.outputs.result) }}
      branch: ${{ steps.branch.outputs.branch }}
      commit-exists: ${{ steps.commit-exists.outputs.exists }}
    steps:
      - name: Shorten commit
        id: commit
        uses: actions/github-script@v7.0.1
        env:
          COMMIT: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.sha || github.sha }}
        with:
          script: |
            return process.env.COMMIT.substring(0, 7);
      - name: Sanitize branch
        id: branch
        env:
          RAW: ${{ github.head_ref || github.ref_name }}
        run: |
          sanitized="$(echo "$RAW" | tr '[:upper:]' '[:lower:]' | sed -E 's/[^a-z0-9-]+/-/g; s/(^-+)|(-+$)//; s/(.{,63}).*/\1/')"
          if [ "$RAW" != "$sanitized" ]; then
            echo "Sanitized branch name from '$RAW' to '$sanitized'"
          fi
          echo "branch=$sanitized" >> "$GITHUB_OUTPUT"
      - name: Join tailnet
        uses: tailscale/github-action@v3.2.2
        with:
          oauth-client-id: ${{ secrets.TS_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_SECRET }}
          tags: tag:ci-vertx
          use-cache: 'true'
      - name: Check if commit exists
        id: commit-exists
        run: |
          exists="$(curl --fail-with-body -X GET '${{ secrets.DEPLOY_HOST }}/commit/${{ fromJSON(steps.commit.outputs.result) }}/exists' \
            --basic -u 'simulator:${{ secrets.SIMULATOR_DEPLOY_PASSWORD }}' \
            -H 'accept: application/json')"
          echo "exists=$exists" >> "$GITHUB_OUTPUT"

  build-configurator:
    name: Build configurator
    runs-on: ubuntu-latest
    needs: pre
    if: needs.pre.outputs.commit-exists != 'true'
    defaults:
      run:
        working-directory: vertx-configurator
    steps:
      - uses: actions/checkout@v4.2.2
        with:
          persist-credentials: false
      - uses: oven-sh/setup-bun@v2.0.2
        with:
          bun-version-file: .tool-versions
      - run: bun install --frozen-lockfile
      - run: bun run astro build
        env:
          NODE_ENV: production
          VERTX_SIMULATOR: true
      - run: bun run ../scripts/csp-nonce.ts
      - uses: actions/upload-artifact@v4.6.2
        with:
          name: configurator
          path: vertx-configurator/dist/
          compression-level: 1
          if-no-files-found: error

  build-vertx:
    name: Build VerTX
    runs-on: ubuntu-latest
    needs: pre
    if: needs.pre.outputs.commit-exists != 'true'
    steps:
      - uses: actions/checkout@v4.2.2
        with:
          persist-credentials: false
      - uses: mozilla-actions/sccache-action@v0.0.9
      - uses: ./.github/actions/setup-rust
      - uses: oven-sh/setup-bun@v2.0.2
        with:
          bun-version-file: .tool-versions
      - name: Install wasm-bindgen
        uses: taiki-e/install-action@v2.52.4
        with:
          tool: wasm-bindgen@0.2.100 # dep:cargo-bin:wasm-bindgen-cli
      - name: Install wasm-opt
        uses: taiki-e/install-action@v2.52.4
        with:
          tool: wasm-opt@0.116.1 # dep:cargo-bin:wasm-opt
      - run: bun run scripts/build-simulator.ts --release
        env:
          VERTX_GIT_BRANCH: ${{ github.head_ref || github.ref_name }}
      - uses: actions/upload-artifact@v4.6.2
        with:
          name: vertx
          path: target/simulator
          compression-level: 1
          if-no-files-found: error

  build-simulator:
    name: Build simulator
    runs-on: ubuntu-latest
    needs: [build-configurator, build-vertx]
    defaults:
      run:
        working-directory: vertx-simulator
    steps:
      - uses: actions/checkout@v4.2.2
        with:
          persist-credentials: false
      - uses: oven-sh/setup-bun@v2.0.2
        with:
          bun-version-file: .tool-versions
      - name: Get VerTX
        uses: actions/download-artifact@v4.3.0
        with:
          name: vertx
          path: target/simulator
      - run: bun install --frozen-lockfile
      - run: bun run vite build
      - run: bun run ../scripts/csp-nonce.ts
      - uses: actions/upload-artifact@v4.6.2
        with:
          name: simulator
          path: vertx-simulator/dist
          compression-level: 1
          if-no-files-found: error

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [pre, build-configurator, build-simulator]
    if: ${{ !failure() }}
    steps:
      - name: Get simulator
        uses: actions/download-artifact@v4.3.0
        if: needs.pre.outputs.commit-exists != 'true'
        with:
          name: simulator
          path: out
      - name: Get configurator
        uses: actions/download-artifact@v4.3.0
        if: needs.pre.outputs.commit-exists != 'true'
        with:
          name: configurator
          path: out/configurator
      - name: Create out.tar.zstd
        if: needs.pre.outputs.commit-exists != 'true'
        run: tar --create --zstd --exclude='.[^/]*' --file=out.tar.zstd --directory=out .
      - name: Join tailnet
        uses: tailscale/github-action@v3.2.2
        with:
          oauth-client-id: ${{ secrets.TS_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_SECRET }}
          tags: tag:ci-vertx
          use-cache: 'true'
      - name: Deploy commit
        if: needs.pre.outputs.commit-exists != 'true'
        run: |
          curl --fail-with-body -X POST '${{ secrets.DEPLOY_HOST }}/commit/${{ needs.pre.outputs.commit }}' \
            --basic -u 'simulator:${{ secrets.SIMULATOR_DEPLOY_PASSWORD }}' \
            -H 'content-type: application/zstd' \
            --data-binary @out.tar.zstd
      - name: Update branch
        run: |
          curl --fail-with-body -X POST '${{ secrets.DEPLOY_HOST }}/branch' \
            --basic -u 'simulator:${{ secrets.SIMULATOR_DEPLOY_PASSWORD }}' \
            -H 'content-type: application/json' \
            -d '{ "commit": "${{ needs.pre.outputs.commit }}", "branch": "${{ needs.pre.outputs.branch }}" }'
      - name: Summary
        run: |
          echo 'Successfully deployed to:' >> "$GITHUB_STEP_SUMMARY"
          echo '- <https://${{ needs.pre.outputs.commit }}.simulator.vertx.cc>' >> "$GITHUB_STEP_SUMMARY"
          echo '- <https://${{ needs.pre.outputs.branch }}.simulator.vertx.cc>' >> "$GITHUB_STEP_SUMMARY"
          if [ '${{ github.event.repository.default_branch }}' = '${{ needs.pre.outputs.branch }}' ]; then
            echo '- <https://simulator.vertx.cc>' >> "$GITHUB_STEP_SUMMARY"
          fi
