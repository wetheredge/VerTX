name: Continuous Integration

on:
  push:
    paths-ignore:
      - "**/*.md"
    branches:
      - main
      - ci
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

env:
  CARGO_TERM_COLOR: always
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  RUSTFLAGS: -Dwarnings

jobs:
  unused-dependencies:
    name: No unused dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install cargo-machete
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-machete@0.6.2 # dep:cargo-bin:cargo-machete
      - run: cargo machete

  rustfmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: rm rust-toolchain.toml
      - run: rustup toolchain install nightly --profile minimal --component rustfmt
      - run: cargo +nightly fmt --all --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        crate: [vertx-config, vertx-config-macros, vertx-crsf, vertx-simulator-ipc]
    steps:
      - uses: actions/checkout@v4
      - run: rm rust-toolchain.toml
      - name: Install toolchain
        run: rustup toolchain install stable --profile minimal --component clippy
      - uses: Swatinem/rust-cache@v2
      - run: cargo clippy --all-targets
        working-directory: ${{ matrix.crate }}

  build-configurator:
    name: Build configurator
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: vertx-configurator
    steps:
      - uses: actions/checkout@v4
      - uses: asdf-vm/actions/setup@v3
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: 1.1.12 # dep:asdf:bun
      - run: bun install
      - run: bun run -b vite build
      - run: bun run scripts/compress.ts
      - uses: actions/upload-artifact@v4
        with:
          name: configurator
          path: vertx-configurator/dist/
          compression-level: 1
          if-no-files-found: error

  clippy-vertx:
    name: Clippy (vertx)
    runs-on: ubuntu-latest
    needs: build-configurator
    steps:
      - uses: actions/checkout@v4
      - run: rm rust-toolchain.toml
      - name: Install toolchain
        uses: esp-rs/xtensa-toolchain@v1.5
        with:
          default: true
          buildtargets: esp32s3
          ldproxy: false
      - uses: Swatinem/rust-cache@v2
      - name: Get pre-built configurator
        uses: actions/download-artifact@v4
        with:
          name: configurator
          path: vertx-configurator/dist
      - name: Run clippy
        run: cargo clippy -Zbuild-std=alloc,core --target xtensa-esp32s3-none-elf --bin vertx -F esp32s3
        working-directory: vertx
        env:
          VERTX_TARGET: devkit
          WIFI_SSID: CI
          WIFI_PASSWORD: password
          RUSTFLAGS: -Clink-arg=-Tlinkall.x -Clink-arg=-Trom_functions.x -Clink-arg=-nostartfiles -Dwarnings

  clippy-vertx-hosted:
    name: Clippy (vertx hosted)
    runs-on: ubuntu-latest
    needs: build-configurator
    steps:
      - uses: actions/checkout@v4
      - run: rm rust-toolchain.toml
      - name: Install toolchain
        run: |
          rustup toolchain install nightly-2024-06-08 --profile minimal --component clippy
          rustup default nightly-2024-06-08
      - uses: Swatinem/rust-cache@v2
      - name: Get pre-built configurator
        uses: actions/download-artifact@v4
        with:
          name: configurator
          path: vertx-configurator/dist
      - name: Run clippy
        run: cargo clippy --bin hosted -F hosted
        working-directory: vertx
        env:
          VERTX_TARGET: devkit
          WIFI_SSID: CI
          WIFI_PASSWORD: password

  clippy-simulator:
    name: Clippy (simulator)
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/gtk-rs/gtk4-rs/gtk4:latest
    steps:
      - uses: actions/checkout@v4
      - run: rm rust-toolchain.toml
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          components: clippy
      - uses: Swatinem/rust-cache@v2
      - name: Run clippy
        run: cargo clippy
        working-directory: vertx-simulator

  tests:
    name: Tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        crate: [vertx-config, vertx-crsf]
    steps:
      - uses: actions/checkout@v4
      - run: rm rust-toolchain.toml
      - name: Install toolchain
        run: rustup toolchain install stable --profile minimal
      - uses: Swatinem/rust-cache@v2
      - name: Install cargo-nextest
        uses: taiki-e/install-action@v2
        with:
          tool: nextest@0.9.70 # dep:cargo-bin:cargo-nextest
      - run: cargo nextest run
        working-directory: ${{ matrix.crate }}

  biome:
    name: Biome
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: biomejs/setup-biome@v2
        env:
          GITHUB_TOKEN: null
      - run: biome version
      - run: biome ci --reporter=github --error-on-warnings .

  dprint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dprint/check@v2.2
        with:
          dprint-version: 0.45.1 # dep:cargo-bin:dprint

  typos:
    name: Typos
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: crate-ci/typos@v1.23.6 # dep:asdf:typos

  passed:
    runs-on: ubuntu-latest
    needs:
      - unused-dependencies
      - rustfmt
      - clippy
      - clippy-vertx
      - clippy-vertx-hosted
      - clippy-simulator
      - tests
      - biome
      - dprint
      - typos
    steps:
      - run: 'true'
