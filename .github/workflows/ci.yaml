name: Continuous Integration

on:
  push:
    paths-ignore:
      - "**/*.md"
    branches:
      - main
      - ci
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

env:
  CARGO_INCREMENTAL: 0
  CARGO_TERM_COLOR: always
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  RUSTC_WRAPPER: sccache
  RUSTFLAGS: -Dwarnings
  SCCACHE_GHA_ENABLED: 'true'

jobs:
  unused-dependencies:
    name: No unused dependencies
    runs-on: ubuntu-24.04
    env:
      RUSTC_WRAPPER: null
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - run: rm rust-toolchain.toml
      - uses: ./.github/actions/cargo-install
        with:
          tool: cargo-shear
      - run: cargo shear

  cargo-sort:
    runs-on: ubuntu-24.04
    env:
      RUSTC_WRAPPER: null
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - run: rm rust-toolchain.toml
      - uses: ./.github/actions/cargo-install
        with:
          tool: cargo-sort
      - run: cargo sort --workspace --check --grouped --no-format

  cache-rust-toolchain:
    name: Cache Rust toolchain
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - uses: ./.github/actions/setup-rust
        with:
          lookup-only: 'true'

  check-targets:
    name: Check targets
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - uses: ./.github/actions/setup-bun
      - run: bun run scripts/check-targets.ts

  config-codegen:
    name: Check config codegen
    runs-on: ubuntu-24.04
    needs: cache-rust-toolchain
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - uses: ./.github/actions/setup-rust
      - uses: ./.github/actions/setup-bun
      - name: Regenerate
        working-directory: vertx-config
        run: |
          rm -rf out && mkdir out
          bun run src/generate.ts
          rustfmt --config-path=../rustfmt.toml out/config.rs out/current.rs out/old.rs
          bun run biome format --write out/config.ts
      - run: git diff --exit-code

  rustfmt:
    runs-on: ubuntu-24.04
    needs: cache-rust-toolchain
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - uses: ./.github/actions/setup-rust
      - run: cargo fmt --all --check

  # Only run for entrypoints; dependencies will be checked where they are used
  clippy:
    name: Clippy
    runs-on: ubuntu-24.04
    needs: cache-rust-toolchain
    strategy:
      fail-fast: false
      matrix:
        crate:
          - vertx-crsf
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - uses: mozilla-actions/sccache-action@7d986dd989559c6ecdb630a3fd2557667be217ad # v0.0.9
      - uses: ./.github/actions/setup-rust
      - run: cargo clippy --all-targets -p ${{ matrix.crate }}

  clippy-config-migrate:
    name: Clippy (config-migrate)
    runs-on: ubuntu-24.04
    needs: cache-rust-toolchain
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - uses: mozilla-actions/sccache-action@7d986dd989559c6ecdb630a3fd2557667be217ad # v0.0.9
      - uses: ./.github/actions/setup-rust
      - run: cargo clippy -Zbuild-std=core --target wasm32-unknown-unknown -p vertx-config-migrate -F up
      - run: cargo clippy -Zbuild-std=core --target wasm32-unknown-unknown -p vertx-config-migrate -F down

  build-configurator:
    name: Build configurator
    runs-on: ubuntu-24.04
    defaults:
      run:
        working-directory: vertx-configurator
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - uses: ./.github/actions/setup-bun
      - run: bun run -b astro build
        env:
          NODE_ENV: production
      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: configurator
          path: out
          compression-level: 1
          if-no-files-found: error

  clippy-vertx:
    name: Clippy (vertx, ${{ matrix.target }})
    runs-on: ubuntu-24.04
    needs: [cache-rust-toolchain, build-configurator]
    strategy:
      fail-fast: false
      matrix:
        target:
          - devkit-esp32s3
          - devkit-rp-pico
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - uses: mozilla-actions/sccache-action@7d986dd989559c6ecdb630a3fd2557667be217ad # v0.0.9
      - uses: ./.github/actions/setup-rust
      - uses: ./.github/actions/setup-bun
      - name: Get pre-built configurator
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: configurator
          path: out
      - name: Run clippy
        run: bun run scripts/build-target.ts --command=clippy --target=${{ matrix.target }}

  clippy-vertx-simulator:
    name: Clippy (vertx simulator)
    runs-on: ubuntu-24.04
    needs: [cache-rust-toolchain, build-configurator]
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - uses: mozilla-actions/sccache-action@7d986dd989559c6ecdb630a3fd2557667be217ad # v0.0.9
      - uses: ./.github/actions/setup-rust
      - uses: ./.github/actions/setup-bun
      - run: bun run scripts/build-simulator.ts --release

  tests:
    name: Tests
    runs-on: ubuntu-24.04
    needs: cache-rust-toolchain
    strategy:
      fail-fast: false
      matrix:
        crate:
          - vertx-crsf
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - uses: ./.github/actions/cargo-install
        with:
          tool: cargo-nextest
      - uses: mozilla-actions/sccache-action@7d986dd989559c6ecdb630a3fd2557667be217ad # v0.0.9
      - uses: ./.github/actions/setup-rust
      - run: cargo nextest run
        working-directory: ${{ matrix.crate }}

  build:
    name: Build (${{ matrix.target }})
    runs-on: ubuntu-24.04
    needs: [cache-rust-toolchain, build-configurator]
    strategy:
      fail-fast: false
      matrix:
        target:
          - devkit-esp32s3
          - devkit-rp-pico
    env:
      VERTX_SKIP_CONFIGURATOR_BUILD: true
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - uses: mozilla-actions/sccache-action@7d986dd989559c6ecdb630a3fd2557667be217ad # v0.0.9
      - uses: ./.github/actions/setup-rust
      - uses: ./.github/actions/setup-bun
      - name: Get pre-built configurator
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: configurator
          path: out
      - name: Build
        run: bun run scripts/build-target.ts --target=${{ matrix.target }} --release
      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: vertx-${{ matrix.target }}
          path: out/firmware/vertx_${{ matrix.target }}_release
          if-no-files-found: error

  size:
    runs-on: ubuntu-24.04
    if: always()
    needs: build
    steps:
      - uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          pattern: vertx-*
          path: bins
          merge-multiple: true
      - run: |
          FLASH=(
            .boot2 .data .data.wifi .rodata .rodata.wifi
            .rwtext .rwtext.wifi .text .vector_table .vectors
          )

          echo '| Target | Approximate size |' >> "$GITHUB_STEP_SUMMARY"
          echo '| ------ | ----------------:|' >> "$GITHUB_STEP_SUMMARY"

          find bins -type f | while read -r elf; do
            total=0
            while read -r section size _; do
              for flash in "${FLASH[@]}"; do
                if [[ "$section" == "$flash" ]]; then
                  total=$((total + size))
                  break
                fi
              done
            done < <(size -A "$elf" | sed -E '/^$/d' | tail -n +3 | head -n -1)

            echo "| $(echo "$elf" | cut -d_ -f2- | cut -d_ -f-2) | $(numfmt --to=iec-i --suffix=B $total) |" >> "$GITHUB_STEP_SUMMARY"
          done

  tsc:
    name: TypeScript
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        dir: [postcard-ts, scripts, vertx-config, vertx-config-migrate, vertx-configurator]
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - uses: ./.github/actions/setup-bun
      - run: bun run -b astro check
        working-directory: ${{ matrix.dir }}
        if: ${{ matrix.dir == 'vertx-configurator' }}
      - run: bun run tsgo --project ${{ matrix.dir }}/tsconfig.json

  tsc-simulator:
    name: TypeScript (vertx-simulator)
    runs-on: ubuntu-24.04
    needs: cache-rust-toolchain
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - uses: mozilla-actions/sccache-action@7d986dd989559c6ecdb630a3fd2557667be217ad # v0.0.9
      - uses: ./.github/actions/setup-rust
      - uses: ./.github/actions/setup-bun
      - uses: ./.github/actions/cargo-install
        with:
          tool: wasm-bindgen-cli,wasm-opt
      - run: bun run scripts/build-simulator.ts
        env:
          VERTX_GIT_BRANCH: ${{ github.head_ref || github.ref_name }}
      - run: bun run tsgo --project vertx-simulator/tsconfig.json

  biome:
    name: Biome
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        dir: [postcard-ts, scripts, vertx-config, vertx-config-migrate, vertx-configurator, vertx-simulator]
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - uses: biomejs/setup-biome@454fa0d884737805f48d7dc236c1761a0ac3cc13 # v2.6.0
        env:
          GITHUB_TOKEN: null
      - run: biome version
      - run: biome ci --reporter=github --error-on-warnings .
        working-directory: ${{ matrix.dir }}

  dprint:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - id: version
        run: .github/scripts/get-mise-version.sh dprint >> "$GITHUB_OUTPUT"
      - uses: dprint/check@2f1cf31537886c3bfb05591c031f7744e48ba8a1 # v2.2
        with:
          dprint-version: ${{ steps.version.outputs.version }}
          config-path: .config/dprint.json

  typos:
    name: Typos
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - id: version
        run: .github/scripts/get-mise-version.sh typos >> "$GITHUB_OUTPUT"
      - uses: taiki-e/install-action@9185c192a96ba09167ad8663015b3fbbf007ec79 # v2.56.2
        with:
          tool: typos@${{ steps.version.outputs.version }}
      - name: Run typos
        run: |
          # Based on <https://github.com/crate-ci/typos/blob/022bdbe8ce21237ca3a95659bd6b8aef48389b9f/action/format_gh.sh>
          git ls-files | typos --file-list - --format json | jq --raw-output --slurp 'map(select(.type="typo")) | map("::error file=\(.path),line=\(.line),col=\(.byte_offset)::`\(.typo)` should be `\(.corrections // [] | join("` or `"))`") | join("\n")'
          git ls-files | typos --file-list -

  passed:
    runs-on: ubuntu-24.04
    needs:
      - unused-dependencies
      - cargo-sort
      - check-targets
      - config-codegen
      - rustfmt
      - clippy
      - clippy-config-migrate
      - clippy-vertx
      - clippy-vertx-simulator
      - tests
      - build
      - tsc
      - tsc-simulator
      - biome
      - dprint
      - typos
    steps:
      - run: 'true'
