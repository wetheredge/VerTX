name: Continuous Integration

on:
  push:
    paths-ignore:
      - "**/*.md"
    branches:
      - main
      - ci
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

env:
  CARGO_TERM_COLOR: always
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  unused-dependencies:
    name: No unused dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install cargo-machete
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-machete@0.6.2 # dep:cargo-bin:cargo-machete
      - run: cargo machete

  rustfmt:
    name: Rust format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: rustup toolchain install nightly --profile minimal --component rustfmt
      - run: cargo +nightly fmt --all --check

  clippy:
    name: Rust lints
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        crate: [vertx-api, vertx-config, vertx-config-macros, vertx-crsf]
    steps:
      - uses: actions/checkout@v4
      - name: Install toolchain
        run: rustup toolchain install stable --profile minimal --component clippy
      - uses: Swatinem/rust-cache@v2
      - run: cargo clippy --all-targets -- -D warnings
        working-directory: ${{ matrix.crate }}

  build-configurator:
    name: Build vertx-configurator
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: vertx-configurator
    steps:
      - uses: actions/checkout@v4
      - uses: asdf-vm/actions/setup@v3
      - name: Install Bun
        run: |
          asdf plugin add bun https://github.com/cometkim/asdf-bun
          asdf install bun
      - run: bun install
      - run: bun run -b vite build
      - run: bun run scripts/compress.ts
      - uses: actions/upload-artifact@v4
        with:
          name: vertx-configurator
          path: vertx-configurator/dist/
          compression-level: 1
          if-no-files-found: error

  clippy-vertx:
    name: Rust lints (vertx)
    runs-on: ubuntu-latest
    needs: build-configurator
    steps:
      - uses: actions/checkout@v4
      - name: Install toolchain (esp)
        uses: esp-rs/xtensa-toolchain@v1.5
        with:
          default: true
          buildtargets: esp32s3
          ldproxy: false
      - uses: Swatinem/rust-cache@v2
      - name: Get pre-built vertx-configurator
        uses: actions/download-artifact@v4
        with:
          name: vertx-configurator
          path: vertx-configurator/dist
      - run: cargo +esp clippy -- -D warnings
        working-directory: vertx
        env:
          VERTX_TARGET: devkit
          WIFI_SSID: CI
          WIFI_PASSWORD: password

  tests:
    name: Rust tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install toolchain
        run: rustup toolchain install stable --profile minimal
      - uses: Swatinem/rust-cache@v2
      - name: Install cargo-nextest
        uses: taiki-e/install-action@v2
        with:
          tool: nextest@0.9.70 # dep:cargo-bin:cargo-nextest
      - run: cargo nextest run -p vertx-crsf

  biome:
    name: Lint & format configurator
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: vertx-configurator
    steps:
      - uses: actions/checkout@v4
      - uses: biomejs/setup-biome@v2
        with:
          working-dir: vertx-configurator
        env:
          GITHUB_TOKEN: null
      - run: biome version
      - run: biome ci --error-on-warnings .

  dprint:
    name: Check misc formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dprint/check@v2.2
        with:
          dprint-version: 0.45.1 # dep:cargo-bin:dprint

  typos:
    name: Typos
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: crate-ci/typos@v1.21.0 # dep:asdf:typos
