version: "3"

dotenv:
  - .env
  - .env.target

vars:
  NIGHTLY: nightly-2024-06-08 # Sync with CI

tasks:
  default:
    cmds:
      - task --list-all --sort none
    silent: true

  clean:
    desc: Delete all build artifacts
    prompt: Delete all build artifacts?
    cmds:
      - cargo clean
      - cd vertx-configurator && rm -r dist

  fmt:
    desc: Format everything
    cmds:
      - cargo +{{.NIGHTLY}} fmt --all
      - cargo bin dprint fmt
      - bun run biome format --write .

  setup:
    desc: Setup needed after first clone and dependency updates
    cmds:
      - git config --local include.path ../.gitconfig
      - rustup toolchain install {{.NIGHTLY}} --profile minimal --component rustfmt clippy
      - cargo bin --install
      - cargo bin --sync-aliases
      - cd vertx-configurator && bun install
      - cmd: echo
        silent: true
      - cmd: echo "The VERTX_TARGET environment variable is required at build time."
        silent: true
      - cmd: echo "A complete list of targets can be printed by running \`task targets\`"
        silent: true
      - cmd: echo
        silent: true
      - cmd: echo "Env vars will be automatically loaded from .env in the project root, if present."
        silent: true

  target:list:
    cmds:
      - echo "Available targets:"
      - for: sources
        cmd: echo '* {{.ITEM | trimPrefix "vertx/targets/" | trimSuffix ".json"}}'
    sources:
      - vertx/targets/*
    status:
      - 'false'
    silent: true

  target:set:
    cmd: bun run scripts/set-target.ts
    silent: true

  all:check:
    cmds:
      - task: vertx:check
      - task: vertx:hosted:check
      - task: configurator:check:tsc
      - task: simulator:check
      - task: simulator-ipc:check
      - task: config:check
      - task: config-macros:check
      - task: crsf:check
      - task: scripts:check:tsc
      - bun run biome ci --error-on-warnings .

  all:test:
    cmds:
      - task: config:test
      - task: crsf:test

  handset:flash:
    desc: Flash the most recently built firmware to the connected handset
    cmds:
      - cargo bin espflash flash --partition-table vertx/partitions.csv --flash-size 16mb --baud 460800 --monitor target/vertx

  handset:monitor:
    desc: Monitor serial output from the connected handset
    cmds:
      - cargo bin espflash monitor

  handset:erase-config:
    desc: Erase the connected handset's config partition
    cmds:
      - cargo bin espflash erase-parts --partition-table vertx/partitions.csv config

  vertx:check:
    deps:
      - configurator:build
    cmds:
      - task: vertx:cargo
        vars:
          COMMAND: clippy

  vertx:build:
    deps:
      - configurator:build
    cmds:
      - task: vertx:cargo
        vars:
          COMMAND: build
      - task: vertx:post-build
        vars:
          PROFILE: debug

  vertx:build:release:
    deps:
      - configurator:build
    cmds:
      - task: vertx:cargo
        vars:
          COMMAND: build
          ARGS: --release
      - task: vertx:post-build
        vars:
          PROFILE: release

  vertx:cargo:
    internal: true
    dir: vertx
    requires:
      vars: [COMMAND]
    env:
      RUSTFLAGS: -Clink-arg=-Tlinkall.x -Clink-arg=-Trom_functions.x -Clink-arg=-nostartfiles
    cmds:
      - cargo +esp {{.COMMAND}} -Zbuild-std=alloc,core --target xtensa-esp32s3-none-elf --bin vertx -F target-esp32s3 {{.ARGS}}

  vertx:post-build:
    internal: true
    dir: target
    requires:
      vars: [PROFILE]
    cmds:
      - cp xtensa-esp32s3-none-elf/{{.PROFILE}}/vertx vertx
    silent: true

  vertx:hosted:check:
    deps:
      - configurator:build
    cmds:
      - task: vertx:hosted:cargo
        vars:
          COMMAND: clippy

  vertx:hosted:build:
    deps:
      - configurator:build
    cmds:
      - task: vertx:hosted:cargo
        vars:
          COMMAND: build

  vertx:hosted:cargo:
    internal: true
    dir: vertx
    requires:
      vars: [COMMAND]
    cmds:
      - cargo +{{.NIGHTLY}} {{.COMMAND}} --bin hosted -F target-hosted

  configurator:dev:
    desc: Run a local dev server. Needs api:dev running
    dir: vertx-configurator
    cmds:
      - bun run vite

  configurator:check:
    cmds:
      - bun run biome ci vertx-configurator
      - task: configurator:check:tsc

  configurator:check:tsc:
    internal: true
    dir: vertx-configurator
    cmds:
      - bun run tsc
    sources:
      - ../bun.lockb
      - ../tsconfig.*
      - scripts/**/*
      - src/**/*
      - '*.config.*'
      - tsconfig.*

  configurator:build:
    dir: vertx-configurator
    deps:
      - configurator:check
    env:
      NODE_ENV: production
    cmds:
      - bun run vite build
      - bun run scripts/compress.ts
    sources:
      - package.json
      - bun.lockb
      - index.html
      - src/**/*
      - '*.config.*'
      - tsconfig.*
      - scripts/compress.ts
    generates:
      - dist/**/*

  configurator:preview:
    desc: Run a local server from built artifacts. Needs api:dev running
    dir: vertx-configurator
    deps:
      - configurator:build
    cmds:
      - bun run vite preview

  simulator:check:
    dir: vertx-simulator
    cmds:
      - cargo clippy

  simulator:build:
    dir: vertx-simulator
    deps:
      - vertx:hosted:build
    cmds:
      - cargo build

  simulator:run:
    dir: vertx-simulator
    deps:
      - vertx:hosted:build
    cmds:
      - cargo run

  simulator-ipc:check:
    dir: vertx-simulator-ipc
    cmds:
      - cargo clippy

  config:check:
    dir: vertx-config
    cmds:
      - cargo clippy --all-features

  config:test:
    dir: vertx-config
    cmds:
      - cargo bin cargo-nextest run --status-level=leak

  config-macros:check:
    dir: vertx-config-macros
    cmds:
      - cargo clippy

  crsf:check:
    dir: vertx-crsf
    cmds:
      - cargo clippy

  crsf:test:
    dir: vertx-crsf
    cmds:
      - cargo bin cargo-nextest run --status-level=leak

  scripts:check:
    cmds:
      - bun run biome ci scripts
      - task: scripts:check:tsc

  scripts:check:tsc:
    internal: true
    dir: scripts
    cmds:
      - bun run tsc
    sources:
      - ../bun.lockb
      - ../tsconfig.*
      - tsconfig.*
      - '**.ts'

